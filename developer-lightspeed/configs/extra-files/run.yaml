version: '2'
image_name: llama-stack

apis:
  - agents
  - datasetio
  - eval
  - inference
  - post_training
  - safety
  - scoring
  - telemetry
  - tool_runtime
  - vector_io
benchmarks: []
container_image: null
datasets: []
external_providers_dir: "/app-root/config/providers.d"
inference_store:
  db_path: .llama/distributions/ollama/inference_store.db
  type: sqlite
logging: null
metadata_store:
  db_path: .llama/distributions/ollama/registry.db
  namespace: null
  type: sqlite
providers:
  agents:
  - config:
      persistence_store:
        db_path: .llama/distributions/ollama/agents_store.db
        namespace: null
        type: sqlite
      responses_store:
        db_path: .llama/distributions/ollama/responses_store.db
        type: sqlite
    provider_id: meta-reference
    provider_type: inline::meta-reference
  datasetio:
  - config:
      kvstore:
        db_path: .llama/distributions/ollama/huggingface_datasetio.db
        namespace: null
        type: sqlite
    provider_id: huggingface
    provider_type: remote::huggingface
  - config:
      kvstore:
        db_path: .llama/distributions/ollama/localfs_datasetio.db
        namespace: null
        type: sqlite
    provider_id: localfs
    provider_type: inline::localfs
  eval:
  - config:
      kvstore:
        db_path: .llama/distributions/ollama/meta_reference_eval.db
        namespace: null
        type: sqlite
    provider_id: meta-reference
    provider_type: inline::meta-reference
  inference:
    - provider_id: ${env.LLM_SERVER_ID}
      provider_type: remote::vllm
      config:
        url: ${env.LLM_SERVER_URL}
        api_token: ${env.LLM_SERVER_TOKEN}
        max_tokens: ${env.VLLM_MAX_TOKENS:=4096}
        tls_verify: ${env.VLLM_TLS_VERIFY:=true}
    - provider_id: sentence-transformers
      provider_type: inline::sentence-transformers
      config: {}
  post_training:
  - config:
      checkpoint_format: huggingface
      device: cpu
      distributed_backend: null
      dpo_output_dir: "."
    provider_id: huggingface
    provider_type: inline::huggingface
  safety:
    - config:
        excluded_categories: []
      provider_id: llama-guard
      provider_type: inline::llama-guard
    - provider_id: lightspeed_question_validity
      provider_type: inline::lightspeed_question_validity
      config:
        model_id: ${env.LLM_SERVER_ID}/${env.VALIDATION_MODEL}
        model_prompt: |-
          Instructions:

          You are a question classifying tool
          You are an expert in Backstage, Red Hat Developer Hub (RHDH), Kubernetes, Openshift, CI/CD and GitOps Pipelines
          Your job is to determine if a user's question is related to Backstage or Red Hat Developer Hub (RHDH) technologies, \
          including integrations, plugins, catalog exploration, service creation, or workflow automation.
          If a question appears to be related to Backstage, RHDH, Kubernetes, Openshift, or any of their features, answer with the word ${allowed}
          If a question is not related to Backstage, RHDH, Kubernetes, Openshift, or their features, answer with the word ${rejected}
          Do not explain your answer, just provide the one-word response
          Example Question:
          Why is the sky blue?
          Example Response:
          ${rejected}

          Example Question:
          Can you help configure my cluster to automatically scale?
          Example Response:
          ${allowed}

          Example Question:
          How do I create import an existing software template in Backstage?
          Example Response:
          ${allowed}

          Example Question:
          How do I accomplish a task in RHDH?
          Example Response:
          ${allowed}

          Example Question:
          How do I explore a component in RHDH catalog?
          Example Response:
          ${allowed}

          Example Question:
          How can I integrate GitOps into my pipeline?
          Example Response:
          ${allowed}

          Question:
          ${message}
          Response:
        invalid_question_response: |-
          Hi, I'm the Red Hat Developer Hub Lightspeed assistant, I can help you with questions about Red Hat Developer Hub or Backstage.
          Please ensure your question is about these topics, and feel free to ask again!
  scoring:
  - config: {}
    provider_id: basic
    provider_type: inline::basic
  - config: {}
    provider_id: llm-as-judge
    provider_type: inline::llm-as-judge
  - config:
      openai_api_key: '********'
    provider_id: braintrust
    provider_type: inline::braintrust
  telemetry:
  - config:
      service_name: 'lightspeed-stack-telemetry'
      sinks: sqlite
      sqlite_db_path: .llama/distributions/ollama/trace_store.db
    provider_id: meta-reference
    provider_type: inline::meta-reference
  tool_runtime:
  - provider_id: model-context-protocol
    provider_type: remote::model-context-protocol
    config: {}
  - provider_id: rag-runtime 
    provider_type: inline::rag-runtime
    config: {}
  vector_io:
  - config:
      kvstore:
        db_path: .llama/distributions/ollama/faiss_store.db
        namespace: null
        type: sqlite
    provider_id: faiss
    provider_type: inline::faiss
  - provider_id: rhdh-docs 
    provider_type: inline::faiss
    config:
      kvstore:
        type: sqlite
        namespace: null
        db_path: /app-root/vector_db/rhdh_product_docs/1.7/faiss_store.db
scoring_fns: []
server:
  auth: null
  host: null
  port: 8321
  quota: null
  tls_cafile: null
  tls_certfile: null
  tls_keyfile: null
shields:
  - shield_id: lightspeed_question_validity-shield
    provider_id: lightspeed_question_validity
tool_groups:
- provider_id: rag-runtime
  toolgroup_id: builtin::rag
  description: "Only use for questions specifically about Red Hat Developer Hub (RHDH). Searches technical documentation for RHDH installation, discovery, configuration, release, upgrade, control access, integration, observability, and extending with plugins. Do not use for any other topic outside RHDH."
vector_dbs:
- embedding_dimension: 768
  embedding_model: /app-root/embeddings_model
  provider_id: rhdh-docs
  vector_db_id: rhdh-product-docs-1_7
models:
- model_id: sentence-transformers/all-mpnet-base-v2
  metadata:
      embedding_dimension: 768
  model_type: embedding
  provider_id: sentence-transformers
  provider_model_id: "/app-root/embeddings_model"
